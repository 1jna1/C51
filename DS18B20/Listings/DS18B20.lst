C51 COMPILER V9.54   DS18B20                                                               10/08/2025 19:21:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS1
                    -8B20.lst) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          /**
   2           ****************************************************************************************************
   3           * @file        DS18B20.c
   4           * @author      jna
   5           * @date        2025-10-08
   6           * @brief       DS18B20测温度(初始化,发送命令)
   7           * @email       2944309620@qq.com
   8           ****************************************************************************************************
   9           * @attention
  10           *
  11           * 实验平台:STC89C52开发板
  12           *
  13           ****************************************************************************************************
  14           */
  15          
  16          #include <REGX52.H>
  17          #include "DS18B20_Command.h"
  18          #include "DS18B20_Communication.h"
  19          #include "INTRINS.h"
  20          #include "LCD1602.h"
  21          
  22          #define DS18B20_IO  P3_7
  23          
  24          /*Receive_Data用于存储DS18B20中9字节的数据
  25          Write_Scratchpad用于设置高低温触发器,分辨率
  26          Receive_ROMCode用于存储DS18B20的特定64位ROM编码
  27          */
  28          //高温报警24度,低温报警0度,12位
  29          unsigned char Receive_Data[9]={0},Write_Scratchpad[3]={0x1B,0x00,0x7F},  
  30                                    Receive_ROMCode[8]={0};   
  31          
  32          /*  
  33              * @brief  DS18B20初始化序列,对应数据手册流程图第一步
  34              * @param  无
  35              * @retval 无
  36          */                                
  37          void DS18B20_InitSequence(void)
  38          {
  39   1              unsigned char i;
  40   1              DS18B20_IO=0;
  41   1              
  42   1              i = 227;
  43   1              while (--i);  //延时500us
  44   1              
  45   1              DS18B20_IO=1;
  46   1              
  47   1              i = 43;
  48   1              while (--i);  //延时100us
  49   1              
  50   1              
  51   1              i = 227;
  52   1              while (--i);  //延时500us     
  53   1      }
  54          
C51 COMPILER V9.54   DS18B20                                                               10/08/2025 19:21:50 PAGE 2   

  55          /*  
  56              * @brief  DS18B20发送ROM命令,对应数据手册流程图第二步
  57              * @param  Command,要发送的是何种命令
  58              * @retval 无
  59          */
  60          void DS18B20_Master_Tx_RomCommand(unsigned char Command)
  61          {
  62   1              unsigned char m,i,j,Byte=0x00,Flag=1;
  63   1              DS18B20_Master_Tx_Byte(Command);
  64   1              if(Command==SKIP_ROM)
  65   1              {
  66   2                      ;
  67   2              }
  68   1              else if(Command==READ_ROM)   //读DS18B20的64位代码
  69   1              {
  70   2                      for(m=0;m<8;m++)
  71   2                      {
  72   3                              for(j=0;j<8;j++)
  73   3                              {
  74   4                                      DS18B20_IO=0;
  75   4                                      _nop_();  //延时6微秒
  76   4                                      DS18B20_IO=1;
  77   4                                      _nop_();  //延时6微秒                       
  78   4                                      
  79   4                                      if(DS18B20_IO==1)
  80   4                                      {
  81   5                                              Byte|=(0x01<<j);
  82   5                                      }
  83   4                                      if(j==7)
  84   4                                      {
  85   5                                              Receive_ROMCode[m]=Byte;
  86   5                                              Byte=0x00;
  87   5                                      }
  88   4                                      i = 25;
  89   4                                  while (--i);  //延时60us
  90   4                              }
  91   3                      }
  92   2              }
  93   1              else if(Command==MATCH_ROM)
  94   1              {
  95   2                      ;//待续
  96   2              }
  97   1              else if(Command==SEARCH_ROM)
  98   1              {
  99   2                      ;//待续
 100   2              }
 101   1              else if(Command==ALARM_SEARCH)   //温度报警,LED灯亮
 102   1              {
 103   2                      DS18B20_IO=0;
 104   2                      _nop_();  //延时6微秒
 105   2                      DS18B20_IO=1;
 106   2                      _nop_();  //延时6微秒
 107   2      
 108   2                      if(DS18B20_IO==0)
 109   2                      {
 110   3                              P2_0=0;
 111   3                      }
 112   2                      else
 113   2                      {
 114   3                              P2_0=1;
 115   3                      }
 116   2              }
C51 COMPILER V9.54   DS18B20                                                               10/08/2025 19:21:50 PAGE 3   

 117   1      }
 118          
 119          /*  
 120              * @brief  DS18B20发送功能命令,对应数据手册流程图第三步
 121              * @param  Command,要发送的是何种命令
 122              * @retval 无
 123          */
 124          void DS18B20_Master_Tx_FunctionCommand(unsigned char Command)
 125          {
 126   1              unsigned char Flag=1,i,j,m,Byte=0x00;
 127   1              DS18B20_Master_Tx_Byte(Command);
 128   1              if(Command==CONVERT_T)
 129   1              {
 130   2                      while(Flag)  //发送读取时隙,直到DS18B20温度转换完成
 131   2                      {
 132   3                              DS18B20_IO=0;
 133   3                              _nop_();  //延时6微秒
 134   3                              DS18B20_IO=1;
 135   3                              _nop_();  //延时6微秒
 136   3                              
 137   3                              if(DS18B20_IO==1)
 138   3                              {
 139   4                                      Flag=0; 
 140   4                              }
 141   3                              
 142   3                              i = 25;
 143   3                              while (--i);  //延时60us
 144   3                      }
 145   2      
 146   2              }
 147   1              else if(Command==COPY_SCRATCHPAD)
 148   1              {
 149   2                      while(Flag)  //发送读取时隙,直到数据复制完成
 150   2                      {
 151   3                              DS18B20_IO=0;
 152   3                              _nop_();  //延时6微秒
 153   3                              DS18B20_IO=1;
 154   3                              _nop_();  //延时6微秒
 155   3                              
 156   3                              if(DS18B20_IO==1)
 157   3                              {
 158   4                                      Flag=0; 
 159   4                              }
 160   3                              
 161   3                              i = 25;
 162   3                              while (--i);  //延时60us
 163   3                      }
 164   2              }
 165   1              else if(Command==READ_POWER_SUPPLY)
 166   1              {
 167   2                      DS18B20_IO=0;
 168   2                      _nop_();  //延时6微秒
 169   2                      DS18B20_IO=1;
 170   2                      _nop_();  //延时6微秒
 171   2                      
 172   2                      if(DS18B20_IO==1)
 173   2                      {
 174   3                              Flag=0;    //表明是外部电源供电
 175   3                      }
 176   2                      LCD_ShowNum(1,16,Flag,1);
 177   2              }
 178   1              else if(Command==RECALL_EEPROM)
C51 COMPILER V9.54   DS18B20                                                               10/08/2025 19:21:50 PAGE 4   

 179   1              {
 180   2                      ;//上电自动进行,待续
 181   2              }
 182   1              else if(Command==READ_SCRATCHPAD)  //读存储器数据
 183   1              {
 184   2                      for(m=0;m<9;m++)
 185   2                      {
 186   3                              for(j=0;j<8;j++)
 187   3                              {
 188   4                                      DS18B20_IO=0;
 189   4                                      _nop_();  //延时6微秒
 190   4                                      DS18B20_IO=1;
 191   4                                      _nop_();  //延时6微秒                       
 192   4                                      
 193   4                                      if(DS18B20_IO==1)
 194   4                                      {
 195   5                                              Byte|=(0x01<<j);
 196   5                                      }
 197   4                                      if(j==7)
 198   4                                      {
 199   5                                              Receive_Data[m]=Byte;
 200   5                                              Byte=0x00;
 201   5                                      }
 202   4                                      i = 25;
 203   4                                  while (--i);  //延时60us
 204   4                              }
 205   3                      }
 206   2              }
 207   1              else if(Command==WRITE_SCRATCHPAD)
 208   1              {
 209   2                      DS18B20_Master_Tx_Byte(Write_Scratchpad[0]);
 210   2                      DS18B20_Master_Tx_Byte(Write_Scratchpad[1]);
 211   2                      DS18B20_Master_Tx_Byte(Write_Scratchpad[2]);
 212   2              }
 213   1      }
 214          
 215          
 216          /*  
 217              * @brief  DS18B20获取温度值(十进制形式)
 218              * @param  无
 219              * @retval Temp,即得到的温度值
 220          */
 221          float DS18B20_GetTemperature(void)
 222          {
 223   1              float Temp;
 224   1              Temp=Receive_Data[0];
 225   1              Temp/=16;
 226   1                      
 227   1              
 228   1              Temp+=((Receive_Data[1]&0x07)*16);
 229   1              
 230   1              if(((Receive_Data[1])&0xF8)!=0)
 231   1              {
 232   2                      Temp=-Temp;
 233   2              }
 234   1              
 235   1              return Temp;
 236   1      }
 237          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.54   DS18B20                                                               10/08/2025 19:21:50 PAGE 5   

   CODE SIZE        =    430    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
