C51 COMPILER V9.54   DS18B20                                                               10/27/2025 10:23:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS1
                    -8B20.lst) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          /**
   2           ****************************************************************************************************
   3           * @file        DS18B20.c
   4           * @author      jna
   5           * @date        2025-10-08
   6           * @brief       DS18B20测温度(初始化,发送命令)
   7           * @email       2944309620@qq.com
   8           ****************************************************************************************************
   9           * @attention
  10           *
  11           * 实验平台:STC89C52开发板
  12           *
  13           ****************************************************************************************************
  14           */
  15          
  16          #include <REGX52.H>
  17          #include "DS18B20_Command.h"
  18          #include "DS18B20_Communication.h"
  19          #include "INTRINS.h"
  20          #include "LCD1602.h"
  21          
  22          #define DS18B20_IO  P3_7
  23          
  24          /*Receive_Data用于存储DS18B20中9字节的数据
  25          Write_Scratchpad用于设置高低温触发器,分辨率
  26          Receive_ROMCode用于存储DS18B20的特定64位ROM编码
  27          */
  28          //高温报警24度,低温报警0度,12位
  29          unsigned char Receive_Data[9]={0},Write_Scratchpad[3]={0x1B,0x00,0x7F},  
  30                                    Receive_ROMCode[8]={0};   
  31          
  32          /*  
  33              * @brief  DS18B20初始化序列,对应数据手册流程图第一步
  34              * @param  无
  35              * @retval 无
  36          */                                
  37          void DS18B20_InitSequence(void)
  38          {
  39   1              unsigned char i;
  40   1              DS18B20_IO=0;
  41   1              
  42   1              i = 227;
  43   1              while (--i);  //延时500us
  44   1              
  45   1              DS18B20_IO=1;
  46   1              
  47   1              i = 43;
  48   1              while (--i);  //延时100us
  49   1              
  50   1              
  51   1              i = 227;
  52   1              while (--i);  //延时500us     
  53   1              
  54   1      //      i = 43;  //延时350us  只要满足One-Wire协议时序要求都可以
C51 COMPILER V9.54   DS18B20                                                               10/27/2025 10:23:59 PAGE 2   

  55   1      //      while (--i);
  56   1      }
  57          
  58          /*  
  59              * @brief  DS18B20发送ROM命令,对应数据手册流程图第二步
  60              * @param  Command,要发送的是何种命令
  61              * @retval 无
  62          */
  63          void DS18B20_Master_Tx_RomCommand(unsigned char Command)
  64          {
  65   1              unsigned char m,i,j,Byte=0x00,Flag=1;
  66   1              DS18B20_Master_Tx_Byte(Command);
  67   1              if(Command==SKIP_ROM)
  68   1              {
  69   2                      ;
  70   2              }
  71   1              else if(Command==READ_ROM)   //读DS18B20的64位代码
  72   1              {
  73   2                      for(m=0;m<8;m++)
  74   2                      {
  75   3                              for(j=0;j<8;j++)
  76   3                              {
  77   4                                      DS18B20_IO=0;
  78   4                                      _nop_();  //延时6微秒
  79   4                                      DS18B20_IO=1;
  80   4                                      _nop_();  //延时6微秒                       
  81   4                                      
  82   4                                      if(DS18B20_IO==1)
  83   4                                      {
  84   5                                              Byte|=(0x01<<j);
  85   5                                      }
  86   4                                      if(j==7)
  87   4                                      {
  88   5                                              Receive_ROMCode[m]=Byte;
  89   5                                              Byte=0x00;
  90   5                                      }
  91   4                                      i = 25;
  92   4                                  while (--i);  //延时60us
  93   4                              }
  94   3                      }
  95   2              }
  96   1              else if(Command==MATCH_ROM)
  97   1              {
  98   2                      ;//待续
  99   2              }
 100   1              else if(Command==SEARCH_ROM)
 101   1              {
 102   2                      ;//待续
 103   2              }
 104   1              else if(Command==ALARM_SEARCH)   //温度报警,LED灯亮
 105   1              {
 106   2                      DS18B20_IO=0;
 107   2                      _nop_();  //延时6微秒
 108   2                      DS18B20_IO=1;
 109   2                      _nop_();  //延时6微秒
 110   2      
 111   2                      if(DS18B20_IO==0)
 112   2                      {
 113   3                              P2_0=0;
 114   3                      }
 115   2                      else
 116   2                      {
C51 COMPILER V9.54   DS18B20                                                               10/27/2025 10:23:59 PAGE 3   

 117   3                              P2_0=1;
 118   3                      }
 119   2              }
 120   1      }
 121          
 122          /*  
 123              * @brief  DS18B20发送功能命令,对应数据手册流程图第三步
 124              * @param  Command,要发送的是何种命令
 125              * @retval 无
 126          */
 127          void DS18B20_Master_Tx_FunctionCommand(unsigned char Command)
 128          {
 129   1              unsigned char Flag=1,i,j,m,Byte=0x00;
 130   1              DS18B20_Master_Tx_Byte(Command);
 131   1              if(Command==CONVERT_T)
 132   1              {
 133   2                      while(Flag)  //发送读取时隙,直到DS18B20温度转换完成
 134   2                      {
 135   3                              DS18B20_IO=0;
 136   3                              _nop_();  //延时6微秒
 137   3                              DS18B20_IO=1;
 138   3                              _nop_();  //延时6微秒
 139   3                              
 140   3                              if(DS18B20_IO==1)
 141   3                              {
 142   4                                      Flag=0; 
 143   4                              }
 144   3                              
 145   3                              i = 25;
 146   3                              while (--i);  //延时60us
 147   3                      }
 148   2      
 149   2              }
 150   1              else if(Command==COPY_SCRATCHPAD)
 151   1              {
 152   2                      while(Flag)  //发送读取时隙,直到数据复制完成
 153   2                      {
 154   3                              DS18B20_IO=0;
 155   3                              _nop_();  //延时6微秒
 156   3                              DS18B20_IO=1;
 157   3                              _nop_();  //延时6微秒
 158   3                              
 159   3                              if(DS18B20_IO==1)
 160   3                              {
 161   4                                      Flag=0; 
 162   4                              }
 163   3                              
 164   3                              i = 25;
 165   3                              while (--i);  //延时60us
 166   3                      }
 167   2              }
 168   1              else if(Command==READ_POWER_SUPPLY)
 169   1              {
 170   2                      DS18B20_IO=0;
 171   2                      _nop_();  //延时6微秒
 172   2                      DS18B20_IO=1;
 173   2                      _nop_();  //延时6微秒
 174   2                      
 175   2                      if(DS18B20_IO==1)
 176   2                      {
 177   3                              Flag=0;    //表明是外部电源供电
 178   3                      }
C51 COMPILER V9.54   DS18B20                                                               10/27/2025 10:23:59 PAGE 4   

 179   2                      LCD_ShowNum(1,16,Flag,1);
 180   2              }
 181   1              else if(Command==RECALL_EEPROM)
 182   1              {
 183   2                      ;//上电自动进行,待续
 184   2              }
 185   1              else if(Command==READ_SCRATCHPAD)  //读存储器数据
 186   1              {
 187   2                      for(m=0;m<9;m++)
 188   2                      {
 189   3                              for(j=0;j<8;j++)
 190   3                              {
 191   4                                      DS18B20_IO=0;
 192   4                                      _nop_();  //延时6微秒
 193   4                                      DS18B20_IO=1;
 194   4                                      _nop_();  //延时6微秒                       
 195   4                                      
 196   4                                      if(DS18B20_IO==1)
 197   4                                      {
 198   5                                              Byte|=(0x01<<j);
 199   5                                      }
 200   4                                      if(j==7)
 201   4                                      {
 202   5                                              Receive_Data[m]=Byte;
 203   5                                              Byte=0x00;
 204   5                                      }
 205   4                                      i = 25;
 206   4                                  while (--i);  //延时60us
 207   4                              }
 208   3                      }
 209   2              }
 210   1              else if(Command==WRITE_SCRATCHPAD)
 211   1              {
 212   2                      DS18B20_Master_Tx_Byte(Write_Scratchpad[0]);
 213   2                      DS18B20_Master_Tx_Byte(Write_Scratchpad[1]);
 214   2                      DS18B20_Master_Tx_Byte(Write_Scratchpad[2]);
 215   2              }
 216   1      }
 217          
 218          
 219          /*  
 220              * @brief  DS18B20获取温度值(十进制形式)
 221              * @param  无
 222              * @retval Temp,即得到的温度值
 223          */
 224          float DS18B20_GetTemperature(void)
 225          {
 226   1              float Temp;
 227   1              Temp=Receive_Data[0];
 228   1              Temp/=16;
 229   1                      
 230   1              
 231   1              Temp+=((Receive_Data[1]&0x07)*16);
 232   1              
 233   1              if(((Receive_Data[1])&0xF8)!=0)  //根据手册高5位全为1时为负
 234   1              {
 235   2                      Temp=-Temp;
 236   2              }
 237   1              
 238   1              return Temp;
 239   1      }
 240          
C51 COMPILER V9.54   DS18B20                                                               10/27/2025 10:23:59 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    430    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
